name: ⚡ Performance Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '0 2 * * 1'  # Weekly on Mondays at 2 AM UTC

jobs:
  benchmark:
    name: 📈 Run Benchmarks
    runs-on: ubuntu-latest
    timeout-minutes: 60

    services:
      neo4j:
        image: neo4j:5.17
        ports:
          - 7687:7687
          - 7474:7474
        env:
          NEO4J_AUTH: neo4j/password
          NEO4J_dbms_memory_heap_initial__size: 2G
          NEO4J_dbms_memory_heap_max__size: 2G
          NEO4J_dbms_memory_pagecache_size: 1G
        options: >-
          --health-cmd "wget --no-verbose --tries=1 --spider http://localhost:7474 || exit 1"
          --health-interval 30s
          --health-timeout 10s
          --health-retries 5

    steps:
    - name: 📦 Checkout
      uses: actions/checkout@v4

    - name: ⚙️ Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '10.0.x'

    - name: 🗂️ Cache Dependencies
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: 📋 Restore Dependencies
      run: dotnet restore

    - name: 🔨 Build Benchmarks
      run: dotnet build tests/Graph.Model.Performance.Tests --configuration Benchmark --no-restore

    - name: ⏳ Wait for Neo4j
      run: |
        echo "Waiting for Neo4j to be ready..."
        timeout 300 bash -c 'until wget --no-verbose --tries=1 --spider http://localhost:7474; do sleep 5; done'
        echo "Neo4j is ready!"

    - name: 🏃‍♂️ Run Performance Tests
      run: |
        dotnet run --project tests/Graph.Model.Performance.Tests \
          --configuration Benchmark --no-build \
          -- --all --artifacts ./artifacts/benchmarks \
          --exporters json html
      env:
        NEO4J_URI: bolt://localhost:7687
        NEO4J_USER: neo4j
        NEO4J_PASSWORD: password

    - name: 📊 Upload Benchmark Results
      uses: actions/upload-artifact@v4
      with:
        name: benchmark-results-${{ github.sha }}
        path: ./artifacts/benchmarks/
        retention-days: 30

    - name: 📈 Store Benchmark Results
      uses: benchmark-action/github-action-benchmark@v1
      if: github.ref == 'refs/heads/main'
      with:
        name: GraphModel Benchmarks
        tool: 'benchmarkdotnet'
        output-file-path: ./artifacts/benchmarks/results/BenchmarkRun-joined.json
        github-token: ${{ secrets.GITHUB_TOKEN }}
        auto-push: true
        comment-on-alert: true
        alert-threshold: '200%'
        fail-on-alert: false 